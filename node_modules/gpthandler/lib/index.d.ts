import { ChatHistory, LlmOptions, Checker, LlmAns, llmModelsEnum, ModelData, LlmMethod } from "./types";
export { ChatHistory, LlmOptions, Checker, LlmAns, llmModelsEnum, ModelData };
declare class OpenAiMethod implements LlmMethod {
    requestChat(history: ChatHistory): Promise<LlmAns>;
    translate(text: string, from: string, to: string): Promise<string>;
}
declare class G4fMethod implements LlmMethod {
    requestChat(history: ChatHistory, model: string): Promise<LlmAns>;
    translate(text: string, from: string, to: string): Promise<string>;
}
export declare class Llm {
    private static methodClasses;
    private method;
    private opt;
    private ShowError;
    constructor(options?: Partial<LlmOptions>);
    setOptions(options?: Partial<LlmOptions>): void;
    private retry;
    requestChat(history: ChatHistory, ansChecker?: Checker): Promise<LlmAns>;
    translate(text: string, from: string, to: string): Promise<LlmAns>;
}
export declare const llmMethods: {
    OpenAi: OpenAiMethod;
    G4f: G4fMethod;
};
